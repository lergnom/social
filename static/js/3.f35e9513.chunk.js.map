{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus/ProfileStatusWithHook.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/Posts/NewPost.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","toggleStateStatus","updateUserStatus","onChange","e","currentTarget","autoFocus","onBlur","name","onDoubleClick","ProfileInfo","profile","Preloader","socialIcons","keys","contacts","map","el","className","s","socialIcon","href","aboutMeWrapper","aboutMeDescription","ava","src","photos","large","alt","fullName","aboutMe","information","lookingForAJob","workDescription","lookingForAJobDescription","Post","postWrapper","friendAvatar","img","message","likeCounts","NewPost","NewPostReduxForm","onSubmit","object","console","log","postText","addPost","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","MyField","validate","requireField","fieldChange","MyPosts","postsElements","posts","post","likesCount","id","postsContainer","React","memo","MyPostsContainer","connect","state","profilePage","dispatch","text","addPostActionCreator","Profile","useDispatch","content","imgProfileInfo","profileContainer","onClick","logoutTc","ProfileContainer","userId","this","match","params","history","getUserStatus","getUserProfile","Component","compose","setUserProfile","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.f35e9513.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgProfileInfo\":\"Profile_imgProfileInfo__3vEpl\",\"profileContainer\":\"Profile_profileContainer__3lONb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMeWrapper\":\"ProfileInfo_aboutMeWrapper__H4N96\",\"aboutMeDescription\":\"ProfileInfo_aboutMeDescription__2ZAum\",\"ava\":\"ProfileInfo_ava__K96Gt\",\"information\":\"ProfileInfo_information__2RNzs\",\"workDescription\":\"ProfileInfo_workDescription__3bQPM\",\"socialIcon\":\"ProfileInfo_socialIcon__3yZNa\",\"github\":\"ProfileInfo_github__m065J\",\"facebook\":\"ProfileInfo_facebook__2qnV3\",\"instagram\":\"ProfileInfo_instagram__2FSyo\",\"vk\":\"ProfileInfo_vk__EWgCt\",\"mainLink\":\"ProfileInfo_mainLink__1TPn1\",\"twitter\":\"ProfileInfo_twitter__2pw-Z\",\"website\":\"ProfileInfo_website__3wGuL\",\"youtube\":\"ProfileInfo_youtube__HDrDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendAvatar\":\"Post_friendAvatar__35Vp6\",\"postWrapper\":\"Post_postWrapper__2QfNV\",\"ava\":\"Post_ava__3HxyZ\",\"message\":\"Post_message__3ynox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__zzzdX\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\n\n\ntype ProfileStatusType = {\n    status: string;\n    updateUserStatus: (text: string) => void\n}\n\nconst ProfileStatusWithHook = (props: ProfileStatusType) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const toggleStateStatus = (value: boolean) => {\n        setEditMode(value);\n        !value && props.updateUserStatus(status);\n    };\n\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return <>\n        {!editMode ?\n            <span\n                onDoubleClick={() => {\n                    toggleStateStatus(true);\n                }}>Статус: {props.status || 'no status'}</span> :\n            <input onChange={onStatusChange} autoFocus={true} onBlur={() => {\n                toggleStateStatus(false);\n            }}\n                   name={'editStatus'}\n                   value={status}/>}\n    </>;\n};\n\n\nexport default ProfileStatusWithHook;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileContainerType} from '../ProfileContainer';\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHook from \"../ProfileStatus/ProfileStatusWithHook\";\n\n\nexport const ProfileInfo = ({profile, ...props}: ProfileContainerType) => {\n    if (!profile) {\n        return <Preloader/>;\n    }\n    const socialIcons = Object.keys(profile.contacts).map(el => {\n        if (profile.contacts[el] === null) {\n            return <></>;\n        }\n        return (\n            <>\n                <a className={`${s.socialIcon} ${s[el]}`} href={profile.contacts[el]}> </a>\n            </>\n        );\n    });\n\n\n    return (\n        <>\n\n            <div className={s.aboutMeWrapper}>\n                <div className={s.aboutMeDescription}>\n                    <img className={s.ava} src={profile.photos.large} alt={profile.fullName}/>\n                    <h3>{profile.fullName}</h3>\n                    <em>{profile.aboutMe}</em>\n\n                    {/*//Компонента отображения и изменения статуса*/}\n                    <ProfileStatusWithHook status={props.status} updateUserStatus={props.updateUserStatus}/>\n                </div>\n                <div className={s.information}>\n                    {profile.lookingForAJob && <div className={s.workDescription}>\n                        <h4>Ищу работу: {profile.lookingForAJob ? 'да' : 'нет'}</h4>\n                        <span>{profile.lookingForAJob && profile.lookingForAJobDescription}</span>\n                    </div>}\n                    {/*<div className={s.workDescription}>*/}\n                    {/*    <h4>Ищу работу: {profile.lookingForAJob ? 'да' : 'нет'}</h4>*/}\n                    {/*    <span>{profile.lookingForAJob && profile.lookingForAJobDescription}</span>*/}\n                    {/*</div>*/}\n                    <div>\n                        <h4>Контакты</h4>\n                        {socialIcons}\n                    </div>\n                </div>\n\n\n            </div>\n        </>\n    );\n};\n","import React from \"react\";\nimport s from './Post.module.css';\n\n\ntype MessageType = {\n    message: string\n    likeCounts: number\n    img: string\n}\n\n\nexport function Post(props: MessageType) {\n    return (\n        <div className={s.postWrapper}>\n            <img className={s.friendAvatar + ' ' + s.ava} src={props.img} alt=\"\"/>\n            <span className={s.message}>{props.message}</span>\n            <div className={s.message}>\n                <span><strong>like:</strong></span> {props.likeCounts}\n            </div>\n        </div>\n    )\n\n}\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requireField} from \"../../../../common/utils/validators\";\nimport {MyField} from \"../../../../common/FormControls/Textarea\";\n\n/**\n * PostProfileComponent - add new message {} into state\n * @constructor\n */\n\nexport type NewPostProps = {\n    addPost: (name: string) => void\n}\n\n\nexport const NewPost = (props: NewPostProps) => {\n    const addPost = (object: NewPostReduxFormType) => {\n        console.log(object.postText);\n        props.addPost(object.postText);\n    }\n\n    return (\n\n        <>\n            <NewPostReduxForm onSubmit={addPost}/>\n        </>\n    )\n}\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst newPost = (props: InjectedFormProps<NewPostReduxFormType>) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={MyField} name='postText' validate={[requireField, maxLength10]} fieldChange=\"Textarea\"/>\n            <div>\n                <button>add</button>\n            </div>\n\n        </form>\n    )\n}\n\ntype NewPostReduxFormType = {\n    postText: string\n}\n\nconst NewPostReduxForm = reduxForm<NewPostReduxFormType>({form: \"newPostForm\"})(newPost)","import React from \"react\";\nimport {Post} from \"./Posts/Post\";\nimport {PostsType} from \"../../../redux/store\";\nimport {NewPost} from \"./Posts/NewPost\";\nimport s from './MyPosts.module.css';\n\ntype MyPostsPorps = {\n    posts: Array<PostsType>\n    addPost: (name: string) => void\n}\n\n\nconst MyPosts = (props: MyPostsPorps) => {\n    console.log('My post component');\n    const postsElements = props.posts.map(post => {\n        return <Post key={post.id} message={post.message} likeCounts={post.likesCount} img={post.img}/>;\n    });\n\n    return (\n        <div className={s.postsContainer}>\n            <div>\n                <NewPost\n                    addPost={props.addPost}/>\n            </div>\n            <div>\n                {postsElements}\n            </div>\n        </div>\n    );\n};\nexport default React.memo(MyPosts);","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\nexport const mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\nexport const mapDispatchToProps = (dispatch: any) => {\n    return {\n        addPost: (text: string) => {\n            dispatch(addPostActionCreator(text))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from \"react\";\nimport s from './Profile.module.css';\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {ProfileContainerType} from \"./ProfileContainer\";\nimport {logoutTc} from \"../../redux/auth-reducer\";\nimport {useDispatch} from \"react-redux\";\n\nexport const Profile = (props: ProfileContainerType) => {\n    const dispatch = useDispatch();\n    const logoutClick = () => {\n        dispatch(logoutTc())\n    }\n    return (\n        <div className={s.content}>\n            <img className={s.imgProfileInfo}\n                 src=\"https://static.tildacdn.com/tild3466-6664-4830-b233-653431393864/photo.jpg\" alt=\"\"/>\n            <div className={s.profileContainer}>\n                <ProfileInfo {...props}/>\n                <MyPostsContainer/>\n            </div>\n            <button onClick={logoutClick}>logout</button>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {ProfileType} from \"../../redux/store\";\nimport {getUserProfile, getUserStatus, setUserProfile, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype PathParamType = {\n    userId: string\n}\n\ntype MapStatePropsType = {\n    profile: ProfileType\n    status: string\n}\n\ntype MapDispatchPropsType = {\n    setUserProfile: (profile: ProfileType) => void,\n    getUserProfile: (id: number) => void,\n    getUserStatus: (id: number) => void,\n    updateUserStatus: (status: string) => void,\n\n}\ntype OwnProps = MapStatePropsType & MapDispatchPropsType\n\nexport type ProfileContainerType = RouteComponentProps<PathParamType> & OwnProps\n\nclass ProfileContainer extends React.Component<ProfileContainerType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = '18340' //this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserStatus(+userId);\n        this.props.getUserProfile(+userId)\n\n\n        // userId && UserApi.getProfile(+userId).then(data => {\n        //     this.props.setUserProfile(data)\n        // })\n    }\n\n    render() {\n        return <Profile {...this.props} />;\n    }\n}\n\nconst mapStateToprops = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status\n    }\n}\n\n// const withAuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n// const ProfileRouter = withRouter<any, any>(ProfileContainer)\n\n// export default connect(mapStateToprops, {setUserProfile, getUserProfile})(ProfileRouter)\n\n// const ProfileRouter = withRouter(connect(mapStateToprops, {setUserProfile, getUserProfile})(withAuthRedirectComponent))\n\nexport default compose<React.ComponentType>(connect(mapStateToprops, {\n        setUserProfile,\n        getUserProfile,\n        getUserStatus,\n        updateUserStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}