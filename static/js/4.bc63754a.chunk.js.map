{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/BestFriends/BestFriends.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/BestFriends/BestFriends.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","activeClassName","active","name","Message","message","BestFriends","friendsEl","contacts","map","friend","friendElement","friendAvatar","src","avatar","alt","friendsWrapper","friendsBlock","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","textBlock","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requireField","typeField","compose","connect","state","dialogs","dialogsPage","messages","dispatch","onClickHandler","newMessage","addMessageActionCreator","withAuthRedirect","dialogsElements","messagesElements","length","dialogItem","object"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,UAAY,6B,oBCApPD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,aAAe,kCAAkC,cAAgB,mCAAmC,aAAe,oC,kFCiB3KC,EARI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,OAAxD,SAAiEP,EAAMQ,UCCpEC,EALC,SAACT,GACT,OAAO,qBAAKC,UAAWC,IAAEQ,QAAlB,SAA4BV,EAAMU,W,kBCFpCC,EAAc,SAACX,GACxB,IAAIY,EAAYZ,EAAMa,SAASC,KAAI,SAAAC,GAC/B,OACI,6BACI,sBAAKd,UAAWC,IAAEc,cAAlB,UACI,qBAAKf,UAAWC,IAAEe,aAAcC,IAAKH,EAAOI,OAAQC,IAAKL,EAAOP,OAChE,+BAAOO,EAAOP,WAHbO,EAAOV,OAQxB,OACI,qBAAKJ,UAAWC,IAAEmB,eAAlB,SACI,sBAAKpB,UAAWC,IAAEoB,aAAlB,UACI,gDACA,6BACKV,U,kCCgCfW,EAAcC,YAAiB,IAc/BC,EAAsBC,YAA0B,CAACC,KAAM,wBAAjCD,EAXL,SAAC1B,GAEpB,OACI,uBAAMC,UAAWC,IAAE0B,UAAWC,SAAU7B,EAAM8B,aAA9C,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUzB,KAAK,aAAa0B,YAAY,qBACnDC,SAAU,CAACC,IAAcb,GAAcc,UAAW,aACzD,gD,iCCrCGC,sBACXC,aApBoB,SAACC,GACrB,MAAO,CACHC,QAASD,EAAME,YAAYD,QAC3BE,SAAUH,EAAME,YAAYC,SAC5B9B,SAAU2B,EAAME,YAAY7B,aAIT,SAAC+B,GACxB,MAAO,CACHC,eAAgB,SAACC,GACbF,EAASG,YAAwBD,SAUzCE,IAFWV,EDTQ,SAACtC,GACpB,IAAIiD,EAAkBjD,EAAMyC,QAAQ3B,KAAI,SAAAX,GAAM,OAAI,cAAC,EAAD,CAA4BE,GAAIF,EAAOE,GAAIG,KAAML,EAAOK,MAAvCL,EAAOE,OACtE6C,EAAmBlD,EAAM2C,SAAS7B,KAAI,SAAAJ,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQL,OAa3E,OACI,qCAZIL,EAAMa,SAASsC,OAAS,EAEpB,cAAC,EAAD,CAAatC,SAAUb,EAAMa,gBAE9B,EAUH,sBAAKZ,UAAWC,IAAEuC,QAAlB,UACI,qBAAKxC,UAAWC,IAAEkD,WAAlB,SACKH,IAEL,sBAAKhD,UAAWC,IAAEyC,SAAlB,UACI,8BACKO,IAEL,cAACzB,EAAD,CAAqBI,SAff,SAACwB,GACnBrD,EAAM6C,eAAeQ,EAAOP","file":"static/js/4.bc63754a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItem\":\"Dialogs_dialogItem__1AD6j\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"textBlock\":\"Dialogs_textBlock__1SV8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsWrapper\":\"BestFriends_friendsWrapper__2umsO\",\"friendsBlock\":\"BestFriends_friendsBlock__2wqna\",\"friendElement\":\"BestFriends_friendElement__2bZxV\",\"friendAvatar\":\"BestFriends_friendAvatar__7WGxN\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from './../Dialogs.module.css';\n\ntype DialogItemType = {\n    id: number\n    name: string\n}\n\n\nconst DialogItem = (props: DialogItemType) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\n\ntype MessageType = {\n    message: string\n}\n\n\nconst Message = (props: MessageType) => {\n        return <div className={s.message}>{props.message}</div>\n\n}\n\nexport default Message\n","import React from \"react\";\nimport s from './BestFriends.module.css'\nimport {ContactsType} from \"../../../redux/store\";\n\nexport type BestFriendsPropsType = {\n    contacts: Array<ContactsType>\n}\n\nexport const BestFriends = (props: BestFriendsPropsType) => {\n    let friendsEl = props.contacts.map(friend => {\n        return (\n            <li key={friend.id}>\n                <div className={s.friendElement}>\n                    <img className={s.friendAvatar} src={friend.avatar} alt={friend.name}/>\n                    <span>{friend.name}</span>\n                </div>\n            </li>\n        )\n    })\n    return (\n        <div className={s.friendsWrapper}>\n            <div className={s.friendsBlock}>\n                <h4>Best Friends: </h4>\n                <ul>\n                    {friendsEl}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {ContactsType, DialogsType, MessageType} from \"../../redux/store\";\nimport {BestFriends} from \"./BestFriends/BestFriends\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormControls/Textarea\";\nimport {maxLengthCreator, requireField} from \"../../common/utils/validators\";\n\ntype DialogsPropsTypes = {\n    dialogs: Array<DialogsType>\n    messages: Array<MessageType>\n    contacts: Array<ContactsType>\n    onClickHandler: (newMessage: string) => void\n    onChangeHandler: (value: string) => void\n    newMessage: string\n}\n\nexport const Dialogs = (props: DialogsPropsTypes) => {\n    let dialogsElements = props.dialogs.map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>)\n    let messagesElements = props.messages.map(message => <Message key={message.id} message={message.message}/>)\n    let bestFriends = () => {\n        if (props.contacts.length > 0) {\n            return (\n                <BestFriends contacts={props.contacts}/>\n            )\n        } else return\n    }\n\n    const addNewMessage = (object: AddMessageType) => {\n        props.onClickHandler(object.newMessage)\n    }\n\n    return (\n        <>\n            {bestFriends()}\n            <div className={s.dialogs}>\n                <div className={s.dialogItem}>\n                    {dialogsElements}\n                </div>\n                <div className={s.messages}>\n                    <div>\n                        {messagesElements}\n                    </div>\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\ntype AddMessageType = {\n    newMessage: string\n}\nconst maxLength50 = maxLengthCreator(50);\n\n\nconst AddMessageForm = (props: InjectedFormProps<AddMessageType>) => {\n\n    return (\n        <form className={s.textBlock} onSubmit={props.handleSubmit}>\n            <Field component={Textarea} name='newMessage' placeholder=\"input your message\"\n                   validate={[requireField, maxLength50]} typeField={'Textarea'}/>\n            <button>send</button>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm<AddMessageType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from \"react\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        contacts: state.dialogsPage.contacts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        onClickHandler: (newMessage: string) => {\n            dispatch(addMessageActionCreator(newMessage))\n        }\n\n    }\n}\n// const withAuthRedirectComponent = withAuthRedirect(Dialogs);\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirectComponent);\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}